type Query {
  alertById(id: ID): Alert
  alertsByOrganisationId(organisationId: ID): [Alert]
  alertsByOrganisationId(organisationId: ID, page: Int, size: Int): [Alert]
  organisations : [Organisation]
  organisationById(organisationId: ID): Organisation
}

type Mutation {
  newOrganisation(name: String, addressLat: String, addressLng: String): Organisation
  editOrganisation(id: ID, name: String, addressLat: String, addressLng: String): Organisation
  deleteOrganisation(id: ID) : ID

  newSkill(organisationId: ID, name: String, shortName: String, displayAtOverview: Boolean): Skill
  editSkill(id: ID, name: String, shortName: String, displayAtOverview: Boolean): Skill
  deleteSkill(id: ID): ID

  newEmployee(organisationId: ID, firstname: String, lastname: String, referenceId: String) : Employee
  editEmployee(id: ID, firstname: String, lastname: String, referenceId: String) : Employee
  deleteEmployee(id: ID) : ID

  newAlertNumber(organisationId: ID, number: String, description: String, shortDescription: String) : AlertNumber
  editAlertNumber(id: ID, number: String, description: String, shortDescription: String) : AlertNumber
  deleteAlertNumber(id: ID) : ID

  addEmployeeSkill(employeeId: ID, skillId: ID) : Boolean
  deleteEmployeeSkill(employeeId: ID, skillId: ID) : Boolean

  newAlertCall(organisationId: ID, alertNumber: String, alertReferenceId: String, alertCallReferenceId: String, keyword: String, dateTime: DateTime, address: String): AlertCall
  addEmployeeFeedback(organisationId: ID, alertCallReferenceId: String, employeeReferenceId : String, feedback : Feedback) : EmployeeFeedback
}

type Subscription {
    alertAdded: AlertAdded
    alertChanged: AlertChanged
    employeeFeedbackAdded : EmployeeFeedbackAdded
}

type Alert {
  id: ID
  organisation: Organisation
  referenceId: String
  keyword: String
  active: Boolean
  dateTime: DateTime
  description: String
  addressInfo1 : String,
  addressInfo2 : String,
  addressLat : String,
  addressLng : String,
  route: String,
  distance: Float,
  duration: Int,
  employeeFeedback: [EmployeeFeedback]
  alertCalls: [AlertCall]
}

type AlertCall {
  id: ID
  referenceId: String
  alertNumber: AlertNumber
  dateTime: DateTime
  alert : Alert
}

type AlertNumber {
  id: ID
  number: String
  description: String
  shortDescription: String
}

type AlertAdded {
  id: ID
}

type AlertChanged {
  id: ID
}

type EmployeeFeedbackAdded {
  alertId: ID
  alertCallId: ID
  employeeId: ID
}

type Organisation {
  id: ID
  name: String
  addressLat: String
  addressLng: String
  employees: [Employee]
  skills: [Skill]
  alertNumbers: [AlertNumber]
}

type EmployeeFeedback {
  employee: Employee
  feedback: Feedback
  dateTime: DateTime
}

enum Feedback {
  NO_RESPONSE,
  COMMIT,
  LATER,
  CANCEL
}

type Employee {
  id: ID
  firstname: String
  lastname: String
  referenceId: String
  skills : [Skill]
}

type Skill {
    id: ID
    name: String
    shortName: String
    displayAtOverview: Boolean
}

scalar DateTime
